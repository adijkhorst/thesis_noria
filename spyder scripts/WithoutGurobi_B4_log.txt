n = 308, B = 4

Solution is:  Optimal
Catching systems located at:
x1032 1.0
x1042 1.0
x1142 1.0
x1442 1.0
x1472 1.0
x2052 1.0
x2062 1.0
x2072 1.0
x2262 1.0
x2342 1.0
x2392 1.0
x2422 1.0
x2792 1.0
x302 1.0
x312 1.0
x492 1.0
x512 1.0
x622 1.0
x702 1.0
x762 1.0
0.1867610043231748
flow caught:  0.18719234022256123
runtime for  4  catching systems 64.54791522026062

Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - C:\Users\Anne-Fleur\AppData\Roaming\Python\Python39\site-packages\pulp\solverdir\cbc\win\64\cbc.exe C:\Users\ANNE-F~1\AppData\Local\Temp\09f1c076d3ce4ec982e35559788fc860-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution C:\Users\ANNE-F~1\AppData\Local\Temp\09f1c076d3ce4ec982e35559788fc860-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 1670 COLUMNS
At line 10799 RHS
At line 12465 BOUNDS
At line 13082 ENDATA
Problem MODEL has 1665 rows, 1540 columns and 6356 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 0.301463 - 0.01 seconds
Cgl0002I 124 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 364 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 124 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 65 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 1288 rows, 1287 columns (492 integer (492 of which binary)) and 5115 elements
Cbc0038I Initial state - 50 integers unsatisfied sum - 17.4633
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.154347 iterations 57
Cbc0038I Solution found of -0.154347
Cbc0038I Relaxing continuous gives -0.154347
Cbc0038I Before mini branch and bound, 442 integers at bound fixed and 459 continuous
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 142 rows 141 columns
Cbc0038I Mini branch and bound improved solution from -0.154347 to -0.173614 (0.12 seconds)
Cbc0038I Freeing continuous variables gives a solution of -0.173614
Cbc0038I Round again with cutoff of -0.181574
Cbc0038I Pass   2: suminf.    1.45821 (6) obj. -0.181574 iterations 8
Cbc0038I Pass   3: suminf.    1.00106 (5) obj. -0.181574 iterations 6
Cbc0038I Pass   4: suminf.    0.57466 (4) obj. -0.181574 iterations 1
Cbc0038I Pass   5: suminf.    1.00000 (3) obj. -0.181574 iterations 47
Cbc0038I Pass   6: suminf.    1.00000 (3) obj. -0.181574 iterations 0
Cbc0038I Pass   7: suminf.    1.11804 (5) obj. -0.181574 iterations 8
Cbc0038I Pass   8: suminf.    0.28749 (2) obj. -0.181574 iterations 44
Cbc0038I Pass   9: suminf.    0.28749 (2) obj. -0.181574 iterations 0
Cbc0038I Pass  10: suminf.    0.50213 (2) obj. -0.181574 iterations 26
Cbc0038I Pass  11: suminf.   10.46683 (29) obj. -0.181574 iterations 63
Cbc0038I Pass  12: suminf.    5.14667 (16) obj. -0.181574 iterations 36
Cbc0038I Pass  13: suminf.    5.14667 (18) obj. -0.181574 iterations 6
Cbc0038I Pass  14: suminf.    5.16832 (13) obj. -0.181574 iterations 25
Cbc0038I Pass  15: suminf.    2.67738 (8) obj. -0.181574 iterations 8
Cbc0038I Pass  16: suminf.    2.07214 (7) obj. -0.181574 iterations 3
Cbc0038I Pass  17: suminf.    2.07214 (7) obj. -0.181574 iterations 0
Cbc0038I Pass  18: suminf.    2.31785 (8) obj. -0.181574 iterations 10
Cbc0038I Pass  19: suminf.    1.99180 (8) obj. -0.181574 iterations 1
Cbc0038I Pass  20: suminf.    2.17982 (8) obj. -0.181574 iterations 9
Cbc0038I Pass  21: suminf.    1.75085 (7) obj. -0.181574 iterations 2
Cbc0038I Pass  22: suminf.    1.75085 (7) obj. -0.181574 iterations 0
Cbc0038I Pass  23: suminf.    1.92565 (7) obj. -0.181574 iterations 5
Cbc0038I Pass  24: suminf.    1.92565 (7) obj. -0.181574 iterations 0
Cbc0038I Pass  25: suminf.    1.96921 (7) obj. -0.181574 iterations 3
Cbc0038I Pass  26: suminf.    1.96921 (7) obj. -0.181574 iterations 1
Cbc0038I Pass  27: suminf.    1.92565 (7) obj. -0.181574 iterations 6
Cbc0038I Pass  28: suminf.   12.37239 (35) obj. -0.181574 iterations 54
Cbc0038I Pass  29: suminf.    5.43249 (19) obj. -0.181574 iterations 44
Cbc0038I Pass  30: suminf.    5.43249 (19) obj. -0.181574 iterations 2
Cbc0038I Pass  31: suminf.    4.85896 (13) obj. -0.181574 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 412 integers at bound fixed and 416 continuous
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 295 rows 293 columns
Cbc0038I Mini branch and bound improved solution from -0.173614 to -0.180484 (0.32 seconds)
Cbc0038I Round again with cutoff of -0.195883
Cbc0038I Pass  31: suminf.    2.60014 (9) obj. -0.195883 iterations 7
Cbc0038I Pass  32: suminf.    2.59838 (9) obj. -0.195883 iterations 5
Cbc0038I Pass  33: suminf.    2.73921 (9) obj. -0.195883 iterations 47
Cbc0038I Pass  34: suminf.    2.73921 (9) obj. -0.195883 iterations 0
Cbc0038I Pass  35: suminf.    3.40826 (10) obj. -0.195883 iterations 9
Cbc0038I Pass  36: suminf.    3.24351 (10) obj. -0.195883 iterations 4
Cbc0038I Pass  37: suminf.    2.65578 (10) obj. -0.195883 iterations 3
Cbc0038I Pass  38: suminf.    2.64587 (9) obj. -0.195883 iterations 1
Cbc0038I Pass  39: suminf.    3.11565 (9) obj. -0.195883 iterations 7
Cbc0038I Pass  40: suminf.    3.03497 (10) obj. -0.195883 iterations 4
Cbc0038I Pass  41: suminf.    2.87463 (10) obj. -0.195883 iterations 3
Cbc0038I Pass  42: suminf.    2.65578 (10) obj. -0.195883 iterations 1
Cbc0038I Pass  43: suminf.    2.64587 (9) obj. -0.195883 iterations 1
Cbc0038I Pass  44: suminf.    3.11565 (9) obj. -0.195883 iterations 7
Cbc0038I Pass  45: suminf.    3.03497 (10) obj. -0.195883 iterations 4
Cbc0038I Pass  46: suminf.    2.87463 (10) obj. -0.195883 iterations 3
Cbc0038I Pass  47: suminf.    2.65578 (10) obj. -0.195883 iterations 1
Cbc0038I Pass  48: suminf.    2.64587 (9) obj. -0.195883 iterations 1
Cbc0038I Pass  49: suminf.    3.11565 (9) obj. -0.195883 iterations 7
Cbc0038I Pass  50: suminf.    3.03497 (10) obj. -0.195883 iterations 4
Cbc0038I Pass  51: suminf.    2.87463 (10) obj. -0.195883 iterations 3
Cbc0038I Pass  52: suminf.    2.65578 (10) obj. -0.195883 iterations 1
Cbc0038I Pass  53: suminf.    2.64587 (9) obj. -0.195883 iterations 1
Cbc0038I Pass  54: suminf.    3.11565 (9) obj. -0.195883 iterations 7
Cbc0038I Pass  55: suminf.    3.03497 (10) obj. -0.195883 iterations 4
Cbc0038I Pass  56: suminf.    2.87463 (10) obj. -0.195883 iterations 3
Cbc0038I Pass  57: suminf.    2.65578 (10) obj. -0.195883 iterations 1
Cbc0038I Pass  58: suminf.    2.64587 (9) obj. -0.195883 iterations 1
Cbc0038I Pass  59: suminf.    3.11565 (9) obj. -0.195883 iterations 7
Cbc0038I Pass  60: suminf.    3.03497 (10) obj. -0.195883 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 441 integers at bound fixed and 460 continuous
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 112 rows 111 columns
Cbc0038I Mini branch and bound did not improve solution (0.41 seconds)
Cbc0038I After 0.41 seconds - Feasibility pump exiting with objective of -0.180484 - took 0.36 seconds
Cbc0012I Integer solution of -0.18048394 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 204 rows 203 columns
Cbc0012I Integer solution of -0.18205737 found by DiveCoefficient after 138 iterations and 0 nodes (0.57 seconds)
Cbc0031I 73 added rows had average density of 7.4520548
Cbc0013I At root node, 73 cuts changed objective from -0.25311994 to -0.21299138 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 155 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 13 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.18205737 best solution, best possible -0.21299138 (0.57 seconds)
Cbc0012I Integer solution of -0.1828308 found by DiveCoefficient after 148 iterations and 2 nodes (0.68 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 106 rows 105 columns
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 102 rows 101 columns
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 110 rows 109 columns
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 86 rows 85 columns
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 114 rows 113 columns
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 128 rows 127 columns
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 97 rows 96 columns
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 96 rows 95 columns
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 129 rows 128 columns
Cbc0010I After 1000 nodes, 191 on tree, -0.1828308 best solution, best possible -0.21299138 (3.75 seconds)
Cbc0004I Integer solution of -0.1829689 found after 17554 iterations and 1870 nodes (6.13 seconds)
Cbc0010I After 2000 nodes, 150 on tree, -0.1829689 best solution, best possible -0.21299138 (6.51 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 96 rows 95 columns
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 98 rows 97 columns
Cbc0010I After 3000 nodes, 267 on tree, -0.1829689 best solution, best possible -0.21299138 (9.59 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 131 rows 130 columns
Cbc0010I After 4000 nodes, 372 on tree, -0.1829689 best solution, best possible -0.21299138 (12.46 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 103 rows 102 columns
Cbc0010I After 5000 nodes, 440 on tree, -0.1829689 best solution, best possible -0.21299138 (15.31 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 105 rows 104 columns
Cbc0010I After 6000 nodes, 301 on tree, -0.1829689 best solution, best possible -0.21299138 (18.36 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 107 rows 106 columns
Cbc0010I After 7000 nodes, 203 on tree, -0.1829689 best solution, best possible -0.21299138 (21.29 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 121 rows 120 columns
Cbc0010I After 8000 nodes, 149 on tree, -0.1829689 best solution, best possible -0.21299138 (24.32 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 105 rows 104 columns
Cbc0010I After 9000 nodes, 65 on tree, -0.1829689 best solution, best possible -0.21299138 (27.59 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 120 rows 119 columns
Cbc0010I After 10000 nodes, 32 on tree, -0.1829689 best solution, best possible -0.21299138 (30.94 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 131 rows 130 columns
Cbc0010I After 11000 nodes, 18 on tree, -0.1829689 best solution, best possible -0.21299138 (33.96 seconds)
Cbc0012I Integer solution of -0.18383246 found by DiveCoefficient after 112262 iterations and 11004 nodes (34.18 seconds)
Cbc0010I After 12000 nodes, 174 on tree, -0.18383246 best solution, best possible -0.20873454 (37.05 seconds)
Cbc0012I Integer solution of -0.18453877 found by DiveCoefficient after 122381 iterations and 12276 nodes (41.20 seconds)
Cbc0004I Integer solution of -0.18482787 found after 127058 iterations and 12530 nodes (42.24 seconds)
Cbc0004I Integer solution of -0.18488806 found after 127068 iterations and 12534 nodes (42.26 seconds)
Cbc0004I Integer solution of -0.18492026 found after 127079 iterations and 12538 nodes (42.27 seconds)
Cbc0016I Integer solution of -0.18504988 found by strong branching after 127098 iterations and 12543 nodes (42.29 seconds)
Cbc0004I Integer solution of -0.18518654 found after 127163 iterations and 12557 nodes (42.32 seconds)
Cbc0004I Integer solution of -0.18527719 found after 127247 iterations and 12571 nodes (42.36 seconds)
Cbc0004I Integer solution of -0.18529051 found after 127258 iterations and 12575 nodes (42.37 seconds)
Cbc0004I Integer solution of -0.18542692 found after 127644 iterations and 12607 nodes (42.48 seconds)
Cbc0004I Integer solution of -0.18557335 found after 129142 iterations and 12720 nodes (42.85 seconds)
Cbc0016I Integer solution of -0.18563351 found by strong branching after 129149 iterations and 12722 nodes (42.86 seconds)
Cbc0004I Integer solution of -0.185666 found after 129158 iterations and 12725 nodes (42.88 seconds)
Cbc0004I Integer solution of -0.1857956 found after 129185 iterations and 12732 nodes (42.90 seconds)
Cbc0004I Integer solution of -0.18593199 found after 129234 iterations and 12743 nodes (42.92 seconds)
Cbc0016I Integer solution of -0.18601273 found by strong branching after 129292 iterations and 12754 nodes (42.95 seconds)
Cbc0004I Integer solution of -0.18602631 found after 129316 iterations and 12758 nodes (42.97 seconds)
Cbc0004I Integer solution of -0.18616245 found after 129396 iterations and 12769 nodes (43.00 seconds)
Cbc0010I After 13000 nodes, 388 on tree, -0.18616245 best solution, best possible -0.19883247 (43.82 seconds)
Cbc0004I Integer solution of -0.18662765 found after 137506 iterations and 13430 nodes (44.86 seconds)
Cbc0010I After 14000 nodes, 415 on tree, -0.18662765 best solution, best possible -0.19883247 (47.24 seconds)
Cbc0038I Full problem 1288 rows 1287 columns, reduced to 152 rows 151 columns
Cbc0010I After 15000 nodes, 711 on tree, -0.18662765 best solution, best possible -0.18982082 (53.37 seconds)
Cbc0010I After 16000 nodes, 711 on tree, -0.18662765 best solution, best possible -0.18838843 (56.50 seconds)
Cbc0010I After 17000 nodes, 507 on tree, -0.18662765 best solution, best possible -0.18744382 (59.13 seconds)
Cbc0004I Integer solution of -0.186761 found after 202095 iterations and 17009 nodes (59.15 seconds)
Cbc0001I Search completed - best objective -0.1867610046775603, took 208377 iterations and 17897 nodes (60.20 seconds)
Cbc0032I Strong branching done 27304 times (115239 iterations), fathomed 856 nodes and fixed 5463 variables
Cbc0035I Maximum depth 34, 483382 variables fixed on reduced cost
Cuts at root node changed objective from -0.25312 to -0.212991
Probing was tried 21000 times and created 82678 cuts of which 0 were active after adding rounds of cuts (3.961 seconds)
Gomory was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Knapsack was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Clique was tried 8 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 20770 times and created 49377 cuts of which 0 were active after adding rounds of cuts (7.651 seconds)
FlowCover was tried 8 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.007 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                0.18676100
Enumerated nodes:               17897
Total iterations:               208377
Time (CPU seconds):             60.26
Time (Wallclock seconds):       60.26

Option for printingOptions changed from normal to all
Total time (CPU seconds):       60.27   (Wallclock seconds):       60.27